name: Android Release APK

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.0'
          channel: 'stable'

      - name: Generate Android scaffolding
        run: |
          rm -rf android ios web
          flutter create . --platforms=android --project-name convoy_mesh_app --org app.convoymesh
          flutter pub get

      - name: Generate throwaway keystore (for dev signing)
        run: |
          keytool -genkeypair -v -keystore release.keystore -storepass password -keypass password \
            -alias upload -keyalg RSA -keysize 2048 -validity 10000 \
            -dname "CN=Convoy Mesh, O=Convoy, C=IT"
          echo "KEYSTORE_PATH=$(pwd)/release.keystore" >> $GITHUB_ENV
          echo "KEYSTORE_PASSWORD=password" >> $GITHUB_ENV
          echo "KEY_ALIAS=upload" >> $GITHUB_ENV
          echo "KEY_PASSWORD=password" >> $GITHUB_ENV

      - name: Patch app/build.gradle for signing
        run: |
          cat > android/app/build.gradle <<'EOF'
          plugins {
              id "com.android.application"
              id "org.jetbrains.kotlin.android"
              id "dev.flutter.flutter-gradle-plugin"
          }
          android {
              namespace "app.convoymesh"
              compileSdk 34
              defaultConfig {
                  applicationId "app.convoymesh"
                  minSdk 23
                  targetSdk 34
                  versionCode 1
                  versionName "0.1.0"
              }
              signingConfigs {
                  release {
                      storeFile file(System.getenv("KEYSTORE_PATH") ?: "release.keystore")
                      storePassword System.getenv("KEYSTORE_PASSWORD") ?: "password"
                      keyAlias System.getenv("KEY_ALIAS") ?: "upload"
                      keyPassword System.getenv("KEY_PASSWORD") ?: "password"
                  }
              }
              buildTypes {
                  release {
                      signingConfig signingConfigs.release
                      minifyEnabled false
                      shrinkResources false
                  }
                  debug {
                      signingConfig signingConfigs.release
                  }
              }
          }
          flutter { source '../..' }
          EOF

      - name: Build release APK
        run: flutter build apk --release

      - name: List outputs (debug info)
        run: |
          echo "== OUTPUTS =="
          ls -R build/app/outputs || true

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: convoy-mesh-release
          path: |
            build/app/outputs/flutter-apk/*.apk
          if-no-files-found: error
